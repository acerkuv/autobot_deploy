# celery_app.py
from celery import Celery
from datetime import datetime, timedelta
from ml.retrain import retrain_model
import time
import tasks
from tasks import retrain_model_task

# ‚úÖ –£–±–µ–¥–∏—Å—å, —á—Ç–æ Redis –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–∞
app = Celery(
    'tasks',
    broker='redis://okx-redis:6379/0',
    backend='redis://okx-redis:6379/0'
)

@app.task
def update_btc_data():
    from shared.okx_api import get_btc_usdt_candles
    now = datetime.now()
    end_dt = now - timedelta(seconds=60)
    start_dt = end_dt - timedelta(minutes=15)
    print(f"üîÑ [Celery] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {start_dt} ‚Üí {end_dt}")
    get_btc_usdt_candles(start_dt, end_dt, bar="3m")

@app.task
def retrain_model_task():
    max_retries = 6
    for attempt in range(max_retries):
        print(f"üîÅ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –ø–µ—Ä–µ–æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å...")
        if retrain_model():
            print("üéâ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            return True
        if attempt < max_retries - 1:
            print("‚è≥ –ñ–¥—ë–º 1 —á–∞—Å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
            time.sleep(3600)
    print("üö® –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã.")
    return False