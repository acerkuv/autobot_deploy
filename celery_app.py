# celery.py
from celery import Celery
from tasks import retrain_model_task

app = Celery(
    'tasks',
    broker='redis://okx-redis:6379/0',      # ‚úÖ Redis –∫–∞–∫ –±—Ä–æ–∫–µ—Ä
    backend='redis://okx-redis:6379/0'      # ‚úÖ Redis –∫–∞–∫ backend
)

app.autodiscover_tasks(['tasks'])

@app.task
def update_btc_data():
    from shared.okx_api import get_btc_usdt_candles
    from datetime import datetime, timedelta
    end_dt = datetime.now() - timedelta(seconds=60)
    start_dt = end_dt - timedelta(minutes=10)
    get_btc_usdt_candles(start_dt, end_dt, bar="3m", max_limit=100)

@app.task
def retrain_model_task():
    from ml.retrain import retrain_model
    import time
    max_retries = 6
    for attempt in range(max_retries):
        print(f"üîÅ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –ø–µ—Ä–µ–æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å...")
        if retrain_model():
            print("üéâ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            return True
        if attempt < max_retries - 1:
            print("‚è≥ –ñ–¥—ë–º 1 —á–∞—Å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
            time.sleep(3600)
    print("üö® –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã.")
    return False