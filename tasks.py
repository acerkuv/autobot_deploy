# tasks.py
from celery import Celery
from datetime import datetime, timedelta
from celery import shared_task
from models.model import train_model
# from shared.okx_api import get_btc_usdt_candles
import pandas as pd


# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–æ–º—É –∂–µ –±—Ä–æ–∫–µ—Ä—É
app = Celery('tasks', broker='redis://okx-redis:6379/0', backend='redis://okx-redis:6379/0')

@app.task
def update_btc_data():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3-–º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏ BTC/USDT"""
    from shared.okx_api import get_btc_usdt_candles

    now = datetime.now()
    end_dt = now - timedelta(seconds=60)  # –ß—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞—Å—Ç—å –≤ –Ω–µ–∑–∞–∫—Ä—ã—Ç—É—é —Å–≤–µ—á—É
    start_dt = end_dt - timedelta(minutes=15)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å –∑–∞–ø–∞—Å–æ–º

    print(f"üîÑ [Celery] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {start_dt} ‚Üí {end_dt}")

    try:
        candles = get_btc_usdt_candles(start_dt, end_dt, bar="3m", max_limit=300)
        if candles:
            print(f"‚úÖ [Celery] –î–æ–±–∞–≤–ª–µ–Ω–æ {len(candles)} –Ω–æ–≤—ã—Ö —Å–≤–µ—á–µ–π")
        else:
            print("‚ùå [Celery] –ù–µ—Ç –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    except Exception as e:
        print(f"‚ùå [Celery] –û—à–∏–±–∫–∞: {e}")


@shared_task
def retrain_model_task():
    print("üîÑ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏...")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        df_3m = pd.read_parquet("data/processed/btc_usdt_3m.parquet")
        df_1h = pd.read_parquet("data/processed/btc_usdt_1h.parquet")

        # –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å
        model = train_model(df_3m, df_1h)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º (–ø—Ä–∏–º–µ—Ä)
        import joblib
        joblib.dump(model, "models/btc_long_model.pkl")

        print("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±—É—á–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        return "LONG"  # –∏–ª–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {e}")
        return "ERROR"

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
# app.conf.beat_schedule = {
#     'update-btc-data-every-3-minutes': {
#         'task': 'tasks.update_btc_data',
#         'schedule': 180.0,  # –ö–∞–∂–¥—ã–µ 3 –º–∏–Ω—É—Ç—ã
#     },
# }
# app.conf.timezone = 'UTC'

